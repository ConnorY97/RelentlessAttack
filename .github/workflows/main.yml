name: Testing on self hosted runner

on:
  workflow_dispatch:
    {}

jobs:
  testing:
    name: Run Tests
    runs-on: self-hosted  # Use the self-hosted runner

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          lfs: false

      - name: Test
        id: test_step  # Add an ID to reference this step
        shell: bash
        run: |
          set +e  # Allow the script to continue on non-zero exit codes
          trap '' SIGSEGV  # Suppress segmentation fault errors
          ~/Unity/Hub/Editor/2023.2.18f1/Editor/Unity -runTests -batchmode \
            -projectPath /home/connor/Documents/RelentlessAttack/ \
            -testPlatform StandaloneLinux64 \
            -testResults /home/connor/Documents/Results/testResults.xml \
            -logfile /home/connor/Documents/Results/logRestults.txt \
            >/dev/null 2>&1 || true  # Ignore the segmentation fault and continue

      - name: Convert test results
        if: steps.test_step.outcome == 'success'  # Only run if the test step was successful
        shell: bash
        run: |
          python3 ./scripts/ConvertResult.py "/home/connor/Documents/Results/testResults.xml"

      - name: Publish CTRF Test Summary Results
        if: steps.test_step.outcome == 'success'  # Only run if the test step was successful
        run: npx github-actions-ctrf "/home/connor/Documents/Results/result.json"

      - name: Post Log on Fail
        if: steps.test_step.outcome == 'failure'  # Only run if the test step failed
        uses: actions/upload-artifact@v4
        with:
          name: TestLogs
          path: /home/connor/Documents/Results/logRestults.txt

      - name: Clean up
        if: always()
        shell: bash
        run: |
          if [ -f "/home/connor/Documents/Results/testResults.xml" ]; then
              rm "/home/connor/Documents/Results/testResults.xml"
          fi
          if [ -f "/home/connor/Documents/Results/logRestults.txt" ]; then
              rm "/home/connor/Documents/Results/logRestults.txt"
          fi
          if [ -f "/home/connor/Documents/Results/result.json" ]; then
              rm "/home/connor/Documents/Results/result.json"
          fi


# name: Build Action
# on:
#   push:
#     branches:
#       - 'build'

# jobs:
#   test-runner:
#     name: Run Play Mode Tests
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         unityVersion:
#           - 2023.2.18f1
#         targetPlatform:
#           - WebGL
#         projectName:
#           - RelentlessAttack
#         projectPath:
#           - ./
#         testMode:
#           - playmode

#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v4
#         with:
#           lfs: false

#       - name: Runnig tests
#         uses: game-ci/unity-test-runner@v4
#         id: tests
#         env:
#           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#           UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#           UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
#         with:
#           projectPath: ${{ matrix.projectPath }}
#           unityVersion: ${{ matrix.unityVersion }}
#           testMode: ${{ matrix.testMode }}
#           artifactsPath: ${{ matrix.testMode }}-artifacts
#           githubToken: ${{ secrets.GITHUB_TOKEN }}
#           checkName: ${{ matrix.testMode }} Test Results

#       - name: Upload Test Results
#         uses: actions/upload-artifact@v4
#         if: always()
#         with:
#           name: Test results for ${{ matrix.testMode }}
#           path: ${{ steps.tests.outputs.artifactsPath }}

# #   build-webgl:
# # #    needs: test-runner
# #     name: Build for WebGL
# #     runs-on: ubuntu-latest
# #     strategy:
# #       fail-fast: false
# #       matrix:
# #         unityVersion:
# #           - 2022.3.6f1
# #         targetPlatform:
# #           - WebGL
# #         projectName:
# #           - RelentlessAttack
# #         projectPath:
# #           - ./

# #     steps:
# #       - name: Checkout repo
# #         uses: actions/checkout@v4
# #         with:
# #           lfs: false

# #       - name: Caching
# #         uses: actions/cache@v4
# #         with:
# #           path: ./Library
# #           key: Library-${{matrix.projectName}}-${{matrix.targetPlatform}}
# #           restore-keys: |
# #             Library-
# #             Library-${{matrix.projectName}}-
# #             Library-${{matrix.projectName}}-${{matrix.targetPlatform}}

# #       - name: Unity Builder
# #         uses: game-ci/unity-builder@v4
# #         env:
# #           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
# #           UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
# #           UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
# #         with:
# #           unityVersion: ${{ matrix.unityVersion }}
# #           targetPlatform: ${{ matrix.targetPlatform }}

# #       - name: Uploading the build
# #         uses: actions/upload-artifact@v4
# #         with:
# #           name: Build
# #           path: build

# #   publish-to-itch:
# #     name: Publish  to Itch
# #     runs-on: ubuntu-latest
# #     needs: build-webgl
# #     steps:
# #     - name: Download Artifact
# #       uses: actions/download-artifact@v4
# #       with:
# #           name: Build

# #     - name: Test Artifact Download
# #       run: ls -R

# #     - name: Uploading to itch.io
# #       uses: manleydev/butler-publish-itchio-action@master
# #       env:
# #         BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
# #         CHANNEL: windows
# #         ITCH_GAME: RelentlessAttack
# #         ITCH_USER: ConnorY97
# #         PACKAGE: /home/runner/work/RelentlessAttack/RelentlessAttack/WebGL/WebGL/

#   # Removing for the time being as there are space issues
#   # Might just have to run this from its own branch
#   # build-android:
#   #   needs: test-runner
#   #   name: Build for Android
#   #   runs-on: ubuntu-latest
#   #   strategy:
#   #     fail-fast: false

#   #   steps:
#   #     - name: Checkout repo
#   #       uses: actions/checkout@v4
#   #       with:
#   #         lfs: false

#   #     - name: Caching
#   #       uses: actions/cache@v4
#   #       with:
#   #         path: ./Library
#   #         key: Library-${{matrix.projectName}}-${{matrix.targetPlatform}}
#   #         restore-keys: |
#   #           Library-
#   #           Library-${{matrix.projectName}}-
#   #           Library-${{matrix.projectName}}-${{matrix.targetPlatform}}

#   #     - name: Unity Builder
#   #       uses: game-ci/unity-builder@v4
#   #       env:
#   #         UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#   #         UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#   #         UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
#   #       with:
#   #         unityVersion: ${{ matrix.unityVersion }}
#   #         targetPlatform: Android
#   #         versioning: Semantic

#   #     - name: Uploading the build
#   #       uses: actions/upload-artifact@v4
#   #       with:
#   #         name: Build
#   #         path: build