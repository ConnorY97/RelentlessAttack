name: Build Action
on:
  push:
    branches:
      - 'build'

jobs:
  test-runner:
    name: Run Play Mode Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2023.2.18f1
        targetPlatform:
          - WebGL
        projectName:
          - RelentlessAttack
        projectPath:
          - ./
        testMode:
          - playmode

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          lfs: false

      - name: Runnig tests
        uses: game-ci/unity-test-runner@v4
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          packageMode: true
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'

      - name: Upload Test Results 1
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}

      - name: Upload Test Restuls 2
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}

  build-webgl:
    needs: test-runner
    name: Build for WebGL
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          lfs: false

      - name: Caching
        uses: actions/cache@v4
        with:
          path: ./Library
          key: Library-${{matrix.projectName}}-${{matrix.targetPlatform}}
          restore-keys: |
            Library-
            Library-${{matrix.projectName}}-
            Library-${{matrix.projectName}}-${{matrix.targetPlatform}}

      - name: Unity Builder
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}

      - name: Uploading the build
        uses: actions/upload-artifact@v4
        with:
          name: Build
          path: build

  build-android:
    needs: test-runner
    name: Build for Android
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          lfs: false

      - name: Caching
        uses: actions/cache@v4
        with:
          path: ./Library
          key: Library-${{matrix.projectName}}-${{matrix.targetPlatform}}
          restore-keys: |
            Library-
            Library-${{matrix.projectName}}-
            Library-${{matrix.projectName}}-${{matrix.targetPlatform}}

      - name: Unity Builder
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: Android
          versioning: Semantic

      - name: Uploading the build
        uses: actions/upload-artifact@v4
        with:
          name: AndroidBuild
          path: build/Android

  publish-to-itch:
      name: Publish  to Itch
      runs-on: ubuntu-latest
      needs: build-webgl
      steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
            name: Build

      - name: Uploading to itch.io
        uses: manleydev/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: android
          ITCH_GAME: RelentlessAttack
          ITCH_USER: ConnorY97
          PACKAGE: /home/runner/work/RelentlessAttack/RelentlessAttack/WebGL/WebGL
